<?JS0
varin("id","Track id",true);
varin("input","input ids",true);
varin("numConditions","Array of number of conditions per input",true);
varin("totals","Array of total counts for merged conditions",true);
varin("background","Background color of track",false);
varin("readmode","How to count multimappers (default: weight",false);
varin("mbppp","Maximal bp per pixel (Default: Infinity)",false);
varin("nolog","Use logscale",false);
varin("nonorm","Use logscale",false);
?>
<?JS
var background = background?background:"#ffffff";
var readmode = readmode?readmode:ReadCountMode.Weight;
var mbppp = mbppp?mbppp:1000;
var nonorm;
var nolog;
?>
		
	<AlignedReadsDataMergeMapper id="+.<?JS id ?>.data" input="<?JS print(EI.wrap(input).map(function(inp) "+."+inp+".data").concat(",")) ?>" numConditions="<?JS print(EI.wrap(numConditions).concat(",")) ?>" >
<?JS for each (var m in mapping) { ?>
		<Map file="<?m[0]?>" condition="<?m[1]?>" label="<?m[2]?>" />
<?JS } ?>
	</AlignedReadsDataMergeMapper>
	<AlignedReadsDataMergeMapper id="-.<?JS id ?>.data" input="<?JS print(EI.wrap(input).map(function(inp) "-."+inp+".data").concat(",")) ?>" numConditions="<?JS print(EI.wrap(numConditions).concat(",")) ?>" >
<?JS for each (var m in mapping) { ?>
		<Map file="<?m[0]?>" condition="<?m[1]?>" label="<?m[2]?>" />
<?JS } ?>
	</AlignedReadsDataMergeMapper>
	
	
		
	<AlignedReadsDataToCoverageMapper id="+.<?JS id ?>.coveragenn" input="+.<?JS id ?>.data">
		<ReadCountMode m="<?JS readmode ?>" />
	</AlignedReadsDataToCoverageMapper>
	<NumericNormalize id="+.<?JS id ?>.coverage" input="+.<?JS id ?>.coveragenn" totals="<?JS print(EI.wrap(totals).concat(",")); ?>" />
	<AlignedReadsDataToJunctionCountMapper id="+.<?JS id ?>.junctionsnn" input="+.<?JS id ?>.data">
		<ReadCountMode m="<?JS readmode ?>" />
		<Strand strand="+"/>
	</AlignedReadsDataToJunctionCountMapper>
	<StorageNumericNormalize id="+.<?JS id ?>.junctions" input="+.<?JS id ?>.junctionsnn" totals="<?JS print(EI.wrap(totals).concat(",")); ?>" />
	<AlignedReadsDataToMismatchesMapper id="+.<?JS id ?>.mismatches" input="+.<?JS id ?>.data">	
		<ReadCountMode m="<?JS readmode ?>" />
	</AlignedReadsDataToMismatchesMapper>

	<AlignedReadsDataToCoverageMapper id="-.<?JS id ?>.coveragenn" input="-.<?JS id ?>.data">
		<ReadCountMode m="<?JS readmode ?>" />
	</AlignedReadsDataToCoverageMapper>
	<NumericNormalize id="-.<?JS id ?>.coverage" input="-.<?JS id ?>.coveragenn" totals="<?JS print(EI.wrap(totals).concat(",")); ?>" />
	<AlignedReadsDataToJunctionCountMapper id="-.<?JS id ?>.junctionsnn" input="-.<?JS id ?>.data">
		<ReadCountMode m="<?JS readmode ?>" />
		<Strand strand="-"/>
	</AlignedReadsDataToJunctionCountMapper>
	<StorageNumericNormalize id="-.<?JS id ?>.junctions" input="-.<?JS id ?>.junctionsnn" totals="<?JS print(EI.wrap(totals).concat(",")); ?>" />
	<AlignedReadsDataToMismatchesMapper id="-.<?JS id ?>.mismatches" input="-.<?JS id ?>.data" >	
			<ReadCountMode m="<?JS readmode ?>" />
	</AlignedReadsDataToMismatchesMapper>
	
	<NumericMerge input="+.<?JS id ?>.coveragenn,+.<?JS id ?>.mismatches" id="+.<?JS id ?>.mismatchfrac">
		<Compute js="data.slice(data.length()-4,data.length()).copy().applyInPlace(function(d) d/data.slice(0,data.length()-4).sum())" />
	</NumericMerge>
	<NumericMerge input="-.<?JS id ?>.coveragenn,-.<?JS id ?>.mismatches" id="-.<?JS id ?>.mismatchfrac">
		<Compute js="data.slice(data.length()-4,data.length()).copy().applyInPlace(function(d) d/data.slice(0,data.length()-4).sum())" />
	</NumericMerge>
	
	
	<NumericTrackGroup id="+.<?JS id ?>.Normalized.Data" class="<?JS id ?>">
		<? if (!nolog) { ?><LogScale base="10" /><? } ?>
		<RegionLinesTrack input="+.<?JS id ?>.junctions" id="+.<?JS id ?>.Normalized.Junctions" class="<?JS id ?>" >
			<? if (!nolog) { ?><LogScale base="10" /><? } ?>
			<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		</RegionLinesTrack>
		<LinesTrack input="+.<?JS id ?>.coverage" id="+.<?JS id ?>.Normalized.Coverage" class="<?JS id ?>" >
			<? if (!nolog) { ?><LogScale base="10" /><? } ?>
			<FixedMin min="0"/>
			<Points p="false" />
			<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		</LinesTrack>
		<? if (nonorm) { ?><Hidden h="true" /><? } ?>
	</NumericTrackGroup>
	
	<NumericTrackGroup id="+.<?JS id ?>.Unnormalized.Data" class="<?JS id ?>">
		<? if (!nolog) { ?><LogScale base="10" /><? } ?>
		<RegionLinesTrack input="+.<?JS id ?>.junctionsnn" id="+.<?JS id ?>.Unnormalized.Junctions" class="<?JS id ?>" >
			<? if (!nolog) { ?><LogScale base="10" /><? } ?>
			<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		</RegionLinesTrack>
		<LinesTrack input="+.<?JS id ?>.coveragenn" id="+.<?JS id ?>.Unnormalized.Coverage" class="<?JS id ?>" >
			<? if (!nolog) { ?><LogScale base="10" /><? } ?>
			<FixedMin min="0"/>
			<Points p="false" />
			<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		</LinesTrack>
		<? if (!nonorm) { ?><Hidden h="true" /><? } ?>
	</NumericTrackGroup>

	<NumericTrackGroup id="+.<?JS id ?>.Mismatches.Group" class="<?JS id ?>">
		<StackedLinesTrack input="+.<?JS id ?>.coveragenn" id="+.<?JS id ?>.Mismatches.Coverage" class="<?JS id ?>" >
			<FixedMin min="0"/>
			<Points p="false" />
			<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		</StackedLinesTrack>
		<StackedBoxesTrack input="+.<?JS id ?>.mismatches" id="+.<?JS id ?>.Mismatches.Mismatches" class="basecolors">
			<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		</StackedBoxesTrack>
		<Hidden h="true" />
	</NumericTrackGroup>
	
	<StackedBoxesTrack input="+.<?JS id ?>.mismatchfrac" id="+.<?JS id ?>.Mismatches.Fraction" class="basecolors">
		<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		<FixedMin min="0"/>
		<FixedMax min="0.1"/>
		<Hidden h="true" />
	</StackedBoxesTrack>
		

	<PackRegionTrack input="+.<?JS id ?>.data" id="+.<?JS id ?>.Reads"  >
		<Hspace space="0" />
		<Vspace space="0" />
		<Background c="#e5efff" />
		<Strand strand="+"/>
		<BoxRenderer>
			<AlignedReadsDataBoxRenderer />
		</BoxRenderer>
		<ViewDoubleClick />
		<Hidden h="true" />
		<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
	</PackRegionTrack>
	
	
	
	<NumericTrackGroup id="-.<?JS id ?>.Normalized.Data" class="<?JS id ?>">
		<? if (!nolog) { ?><LogScale base="10" /><? } ?>
		<RegionLinesTrack input="-.<?JS id ?>.junctions" id="-.<?JS id ?>.Normalized.Junctions" class="<?JS id ?>" >
			<? if (!nolog) { ?><LogScale base="10" /><? } ?>
			<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		</RegionLinesTrack>
		<LinesTrack input="-.<?JS id ?>.coverage" id="-.<?JS id ?>.Normalized.Coverage" class="<?JS id ?>" >
			<? if (!nolog) { ?><LogScale base="10" /><? } ?>
			<FixedMin min="0"/>
			<Points p="false" />
			<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		</LinesTrack>
		<? if (nonorm) { ?><Hidden h="true" /><? } ?>
	</NumericTrackGroup>
	
	<NumericTrackGroup id="-.<?JS id ?>.Unnormalized.Data" class="<?JS id ?>">
		<? if (!nolog) { ?><LogScale base="10" /><? } ?>
		<RegionLinesTrack input="-.<?JS id ?>.junctionsnn" id="-.<?JS id ?>.Unnormalized.Junctions" class="<?JS id ?>" >
			<? if (!nolog) { ?><LogScale base="10" /><? } ?>
			<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		</RegionLinesTrack>
		<LinesTrack input="-.<?JS id ?>.coveragenn" id="-.<?JS id ?>.Unnormalized.Coverage" class="<?JS id ?>" >
			<? if (!nolog) { ?><LogScale base="10" /><? } ?>
			<FixedMin min="0"/>
			<Points p="false" />
			<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		</LinesTrack>
		<? if (!nonorm) { ?><Hidden h="true" /><? } ?>
	</NumericTrackGroup>

	<NumericTrackGroup id="-.<?JS id ?>.Mismatches.Group" class="<?JS id ?>">
		<StackedLinesTrack input="-.<?JS id ?>.coveragenn" id="-.<?JS id ?>.Mismatches.Coverage" class="<?JS id ?>" >
			<FixedMin min="0"/>
			<Points p="false" />
			<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		</StackedLinesTrack>
		<StackedBoxesTrack input="-.<?JS id ?>.mismatches" id="-.<?JS id ?>.Mismatches.Mismatches" class="basecolors">
			<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		</StackedBoxesTrack>
		<Hidden h="true" />
	</NumericTrackGroup>

	<StackedBoxesTrack input="-.<?JS id ?>.mismatchfrac" id="-.<?JS id ?>.Mismatches.Fraction" class="basecolors">
		<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
		<FixedMin min="0"/>
		<FixedMax min="0.1"/>
		<Hidden h="true" />
	</StackedBoxesTrack>
		
		
	<PackRegionTrack input="-.<?JS id ?>.data" id="-.<?JS id ?>.Reads"  >
		<Hspace space="0" />
		<Vspace space="0" />
		<Background c="#e5efff" />
		<Strand strand="-"/>
		<BoxRenderer>
			<AlignedReadsDataBoxRenderer />
		</BoxRenderer>
		<ViewDoubleClick />
		<Hidden h="true" />
		<MaxBasePairsPerPixel v="<?JS print(mbppp) ?>"/>
	</PackRegionTrack>